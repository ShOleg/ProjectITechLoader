/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package iTecLoader;

import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.FileNotFoundException;
import java.io.IOException;
import javax.swing.*;

/**
 *
 * @author ShOleg
 */
public final class JFrameProperty extends javax.swing.JFrame implements ActionListener {

    private String nameTask = "";
    private boolean flag = true;
    private boolean parameterConfig = true;

    /**
     * Creates new form JFrameProperty
     */
    public JFrameProperty(String nameTask, boolean flag, boolean parameterConfig) {
        this.nameTask = nameTask;
        this.flag = flag;
        this.parameterConfig = parameterConfig;

        initComponents();

        ComboBoxDBMS.addItem(IniConst.DB_DB2);
        ComboBoxDBMS.addItem(IniConst.DB_DERBY_NET);
        ComboBoxDBMS.addItem(IniConst.DB_DERBY);
        
         
        this.lblNameSerber.setVisible(false);
        this.fldNameSerber.setVisible(false);

        this.setPreferredSize(null);

        setTitle("Свойства программы " + nameTask);
        setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("iTecLoader/java.png")));
        setCenter();

        if (parameterConfig == true) {
            sets(false);
            setVisibleConfig(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        fldLogin = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        fldPass = new javax.swing.JPasswordField();
        lblNameSerber = new javax.swing.JLabel();
        fldNameSerber = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        fldPict = new javax.swing.JTextField();
        btnPict = new javax.swing.JButton();
        lblApp = new javax.swing.JLabel();
        fldApp = new javax.swing.JTextField();
        btnApp = new javax.swing.JButton();
        lblData = new javax.swing.JLabel();
        fldDb = new javax.swing.JTextField();
        btnDb = new javax.swing.JButton();
        lblFile = new javax.swing.JLabel();
        fldFile = new javax.swing.JTextField();
        btnFile = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        fldWorkDir = new javax.swing.JTextField();
        btnWorkDir = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        fldPathOO = new javax.swing.JTextField();
        btnPathOO = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();
        fldIntBrowser = new javax.swing.JTextField();
        btnIntBrowser = new javax.swing.JButton();
        lblConfig = new javax.swing.JLabel();
        fldConfig = new javax.swing.JTextField();
        btnConfig = new javax.swing.JButton();
        lblDBMS = new javax.swing.JLabel();
        ComboBoxDBMS = new javax.swing.JComboBox();
        lblDbSource = new javax.swing.JLabel();
        fldDbSource = new javax.swing.JTextField();
        btnDbSource = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        btnChange = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(610, 420));
        getContentPane().setLayout(new java.awt.GridBagLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel1.setLayout(new java.awt.GridBagLayout());

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("Логин :");
        jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel1, gridBagConstraints);

        fldLogin.setMaximumSize(new java.awt.Dimension(200, 20));
        fldLogin.setMinimumSize(new java.awt.Dimension(200, 20));
        fldLogin.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldLogin, gridBagConstraints);

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("Пароль :");
        jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel2, gridBagConstraints);

        fldPass.setMaximumSize(new java.awt.Dimension(200, 20));
        fldPass.setMinimumSize(new java.awt.Dimension(200, 20));
        fldPass.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldPass, gridBagConstraints);

        lblNameSerber.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblNameSerber.setText("Имя Сервера в сети :");
        lblNameSerber.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblNameSerber, gridBagConstraints);

        fldNameSerber.setMaximumSize(new java.awt.Dimension(200, 20));
        fldNameSerber.setMinimumSize(new java.awt.Dimension(200, 20));
        fldNameSerber.setPreferredSize(new java.awt.Dimension(200, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldNameSerber, gridBagConstraints);

        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("Заставка :");
        jLabel4.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel4, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldPict, gridBagConstraints);

        btnPict.addActionListener(this);
        btnPict.setText("...");
        btnPict.setMaximumSize(new java.awt.Dimension(20, 20));
        btnPict.setMinimumSize(new java.awt.Dimension(20, 20));
        btnPict.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnPict, gridBagConstraints);

        lblApp.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblApp.setText("Сервер приложения :");
        lblApp.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblApp, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldApp, gridBagConstraints);

        btnApp.addActionListener(this);
        btnApp.setText("...");
        btnApp.setMaximumSize(new java.awt.Dimension(20, 20));
        btnApp.setMinimumSize(new java.awt.Dimension(20, 20));
        btnApp.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnApp, gridBagConstraints);

        lblData.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblData.setText("Сервер данных :");
        lblData.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblData, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldDb, gridBagConstraints);

        btnDb.addActionListener(this);
        btnDb.setText("...");
        btnDb.setMaximumSize(new java.awt.Dimension(20, 20));
        btnDb.setMinimumSize(new java.awt.Dimension(20, 20));
        btnDb.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnDb, gridBagConstraints);

        lblFile.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblFile.setText("Сервер файлов :");
        lblFile.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblFile, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldFile, gridBagConstraints);

        btnFile.addActionListener(this);
        btnFile.setText("...");
        btnFile.setMaximumSize(new java.awt.Dimension(20, 20));
        btnFile.setMinimumSize(new java.awt.Dimension(20, 20));
        btnFile.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 6;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnFile, gridBagConstraints);

        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("Рабочий каталог :");
        jLabel8.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel8, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldWorkDir, gridBagConstraints);

        btnWorkDir.addActionListener(this);
        btnWorkDir.setText("...");
        btnWorkDir.setMaximumSize(new java.awt.Dimension(20, 20));
        btnWorkDir.setMinimumSize(new java.awt.Dimension(20, 20));
        btnWorkDir.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 7;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnWorkDir, gridBagConstraints);

        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("Путь к офису :");
        jLabel9.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel9, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldPathOO, gridBagConstraints);

        btnPathOO.addActionListener(this);
        btnPathOO.setText("...");
        btnPathOO.setMaximumSize(new java.awt.Dimension(20, 20));
        btnPathOO.setMinimumSize(new java.awt.Dimension(20, 20));
        btnPathOO.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 8;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnPathOO, gridBagConstraints);

        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("Интернет-браузер :");
        jLabel10.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(jLabel10, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldIntBrowser, gridBagConstraints);

        btnIntBrowser.addActionListener(this);
        btnIntBrowser.setText("...");
        btnIntBrowser.setMaximumSize(new java.awt.Dimension(20, 20));
        btnIntBrowser.setMinimumSize(new java.awt.Dimension(20, 20));
        btnIntBrowser.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 9;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnIntBrowser, gridBagConstraints);

        lblConfig.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblConfig.setText("Конфигурация :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblConfig, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldConfig, gridBagConstraints);

        btnConfig.addActionListener(this);
        btnConfig.setText("...");
        btnConfig.setMaximumSize(new java.awt.Dimension(20, 20));
        btnConfig.setMinimumSize(new java.awt.Dimension(20, 20));
        btnConfig.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 10;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnConfig, gridBagConstraints);

        lblDBMS.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDBMS.setText("База данных :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblDBMS, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 11;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(ComboBoxDBMS, gridBagConstraints);

        lblDbSource.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblDbSource.setText("Источник данных :");
        lblDbSource.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(lblDbSource, gridBagConstraints);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(fldDbSource, gridBagConstraints);

        btnDbSource.addActionListener(this);
        btnDbSource.setText("...");
        btnDbSource.setMaximumSize(new java.awt.Dimension(20, 20));
        btnDbSource.setMinimumSize(new java.awt.Dimension(20, 20));
        btnDbSource.setPreferredSize(new java.awt.Dimension(20, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 12;
        gridBagConstraints.insets = new java.awt.Insets(3, 3, 3, 3);
        jPanel1.add(btnDbSource, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jPanel2.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        btnChange.setText("Сохранить");
        btnChange.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChangeActionPerformed(evt);
            }
        });
        jPanel2.add(btnChange);

        btnCancel.setText("Отменить");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });
        jPanel2.add(btnCancel);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnChangeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChangeActionPerformed
        try {

            putIniData(nameTask + ".ini");

            if (flag) {
                System.exit(0);
            } else {
                dispose();
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.toString(), "Ошибка", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnChangeActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        if (flag) {
            System.exit(0);
        } else {
            dispose();
        }
    }//GEN-LAST:event_btnCancelActionPerformed

    /**
     * @param args the command line arguments
     */
/*    public static void main(String args[]) {
       
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                JFrameProperty fp = new JFrameProperty("", true, false);



                fp.setResizable(false);
                fp.setTitle("Свойства программы");
                fp.setIconImage(Toolkit.getDefaultToolkit().getImage(this.getClass().getResource("java.png")));
                fp.setCenter();
                fp.setPreferredSize(new Dimension(720, 700));

                fp.setVisible(true);
            }
        });
    }*/

    private String choiceDialog() {
        chooser = new JFileChooser();
        chooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        chooser.setDialogTitle("Открыть");
        int t = chooser.showOpenDialog(this);

        if (t == 0) {
            return chooser.getSelectedFile().toString();
        }

        return null;
    }

    private String choiceDialogFile() {
        chooser = new JFileChooser();
        chooser.setDialogTitle("Открыть");
        int t = chooser.showOpenDialog(this);

        if (t == 0) {
            return chooser.getSelectedFile().toString();
        }

        return null;
    }

    private String setImageFile() {
        chooser = new JFileChooser();
        chooser.setDialogTitle("Открыть изображение");
        final ExtensionFileFilter filter = new ExtensionFileFilter();
        filter.addExtension("jpg");
        filter.addExtension("jpeg");
        filter.addExtension("gif");
        filter.setDescription("Файлы изображений");
        chooser.setFileFilter(filter);
        chooser.setAccessory(new PanelImagePreviewer(chooser));

        int t = chooser.showOpenDialog(this);

        if (t == 0) {
            return chooser.getSelectedFile().toString();
        }

        return null;

    }

    @Override
    public void actionPerformed(ActionEvent e) {
        Object obj = e.getSource();

        if (obj == btnPathOO) {
            setStringToTextField(4);
        } else if (obj == btnFile) {
            setStringToTextField(6);
        } else if (obj == btnWorkDir) {
            setStringToTextField(3);
        } else if (obj == btnApp) {
            setStringToTextField(1);
        } else if (obj == btnDb) {
            setStringToTextField(2);
        } else if (obj == btnIntBrowser) {
            setStringToTextField(7);
        } else if (obj == btnPict) {
            setStringToTextField(8);
        } else if (obj == btnConfig) {
            setStringToTextField(5);
        } else if (obj == btnDbSource) {
            setStringToTextField(9);
        }
    }

    private void setStringToTextField(int index) {
        String fileName;

        if (index == 8) {
            fileName = setImageFile();
        } else if (index == 5) {
            fileName = choiceDialogFile();
        } else {
            fileName = choiceDialog();
        }

        if (!(fileName == null)) {
            switch (index) {
                case 1: //сервер приложения
                    fldApp.setText(fileName);
                    break;
                case 2: //сервер данных
                    fldDb.setText(fileName);
                    break;
                case 3: //рабочая директория
                    fldWorkDir.setText(fileName);
                    break;
                case 4: //директория офиса
                    fldPathOO.setText(fileName);
                    break;
                case 5:
                    fldConfig.setText(fileName);
                    break;
                case 6: // сервер файлов
                    fldFile.setText(fileName);
                    break;
                case 7:
                    fldIntBrowser.setText(fileName);
                    break;
                case 8:
                    fldPict.setText(fileName);
                    break;
                case 9:
                    fldDbSource.setText(fileName);
                    break;

            }
        }
    }

    public void setCenter() {
        Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
        Dimension frameSize = this.getSize();
        if (frameSize.height > screenSize.height) {
            frameSize.height = screenSize.height;
        }
        if (frameSize.width > screenSize.width) {
            frameSize.width = screenSize.width;
        }
        this.setLocation((screenSize.width - frameSize.width) / 2, (screenSize.height - frameSize.height) / 2);
    }

    public void getIniData() {
        IniSettings.clear();
        try {
            IniSettings.load(PathConst.userDir, nameTask + ".ini");
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }

        ComboBoxDBMS.setSelectedItem(IniSettings.get(IniConst.DBMS));
        fldLogin.setText(IniSettings.get(IniConst.LOGIN));
        fldPass.setText(IniSettings.get(IniConst.PASSWORD));
        fldPict.setText(IniSettings.get(IniConst.PICTURE));
        fldDb.setText(IniSettings.get(IniConst.DATA_SERVER));
        fldApp.setText(IniSettings.get(IniConst.APP_SERVER));
        fldFile.setText(IniSettings.get(IniConst.FILE_SERVER));
        fldNameSerber.setText(IniSettings.get(IniConst.SERVER));
        fldWorkDir.setText(IniSettings.get(IniConst.WORK_DIR));
        fldPathOO.setText(IniSettings.get(IniConst.DIR_OO));
        fldIntBrowser.setText(IniSettings.get(IniConst.BROWSER));
        fldDbSource.setText(IniSettings.get(IniConst.DATA_SOURCE));
    }

    public void putIniData(String nameFile) {
        IniSettings.clear();

        IniSettings.put("[USER]", "");
        IniSettings.put(IniConst.LOGIN, fldLogin.getText());
        IniSettings.put(IniConst.PASSWORD, fldPass.getText());

        if (this.parameterConfig) {
            IniSettings.put(IniConst.CONFIG, fldConfig.getText());
        }

        IniSettings.put(IniConst.PICTURE, fldPict.getText());
        IniSettings.put(IniConst.WORK_DIR, fldWorkDir.getText());
        IniSettings.put("[SYSTEM]", "");
        IniSettings.put(IniConst.DBMS, this.ComboBoxDBMS.getSelectedItem());
        IniSettings.put(IniConst.SERVER, fldNameSerber.getText());
        IniSettings.put("[PATH]", "");
        IniSettings.put(IniConst.APP_SERVER, fldApp.getText());
        IniSettings.put(IniConst.DATA_SERVER, fldDb.getText());
        IniSettings.put(IniConst.FILE_SERVER, fldFile.getText());
        IniSettings.put("[PROGRAM]", "");
        IniSettings.put(IniConst.DIR_OO, fldPathOO.getText());
        IniSettings.put(IniConst.BROWSER, fldIntBrowser.getText());
        IniSettings.put("[DATABASE]", "");
        IniSettings.put(IniConst.DATA_SOURCE, fldDbSource.getText());
        IniSettings.put(IniConst.DB_PASSWORD, "");
        IniSettings.put(IniConst.KEEPER, "");
        IniSettings.put(IniConst.ADDRESS, "");
        IniSettings.put(IniConst.MOSAIC, "");

        try {

            IniSettings.save(PathConst.userDir, nameFile);

        } catch (FileNotFoundException ex) {
            System.out.println(ex.getMessage());
        } catch (IOException ex) {
            System.out.println(ex.getMessage());
        }
    }

    private void setVisibleConfig(boolean b) {
        lblConfig.setVisible(b);
        fldConfig.setVisible(b);
        btnConfig.setVisible(b);
    }

    private void sets(boolean b) {

        lblApp.setVisible(b);
        fldApp.setVisible(b);
        btnApp.setVisible(b);

        lblData.setVisible(b);
        fldDb.setVisible(b);
        btnDb.setVisible(b);

        lblFile.setVisible(b);
        fldFile.setVisible(b);
        btnFile.setVisible(b);

        lblDBMS.setVisible(b);
        ComboBoxDBMS.setVisible(b);

        lblDbSource.setVisible(b);
        fldDbSource.setVisible(b);
        btnDbSource.setVisible(b);
    }

    public JButton getBtnCancel() {
        return btnCancel;
    }

    public JButton getBtnChange() {
        return btnChange;
    }

    public void setBtnChange(JButton btnChange) {
        this.btnChange = btnChange;
    }

    public JTextField getFldApp() {
        return fldApp;
    }

    public void setFldApp(JTextField fldApp) {
        this.fldApp = fldApp;
    }

    public JTextField getFldDb() {
        return fldDb;
    }

    public void setFldDb(JTextField fldDb) {
        this.fldDb = fldDb;
    }

    public JTextField getFldFile() {
        return fldFile;
    }

    public void setFldFile(JTextField fldFile) {
        this.fldFile = fldFile;
    }

    public JTextField getFldIntBrowser() {
        return fldIntBrowser;
    }

    public void setFldIntBrowser(JTextField fldIntBrowser) {
        this.fldIntBrowser = fldIntBrowser;
    }

    public JPasswordField getFldPass() {
        return fldPass;
    }

    public void setFldPass(JPasswordField fldPass) {
        this.fldPass = fldPass;
    }

    public JTextField getFldPathOO() {
        return fldPathOO;
    }

    public void setFldPathOO(JTextField fldPathOO) {
        this.fldPathOO = fldPathOO;
    }

    public JTextField getFldPict() {
        return fldPict;
    }

    public void setFldPict(JTextField fldPict) {
        this.fldPict = fldPict;
    }

    public JTextField getFldServer() {
        return fldNameSerber;
    }

    public void setFldServer(JTextField fldServer) {
        this.fldNameSerber = fldServer;
    }

    public JTextField getFldWorkDir() {
        return fldWorkDir;
    }

    public void setFldWorkDir(JTextField fldWorkDir) {
        this.fldWorkDir = fldWorkDir;
    }

    public JTextField getFlgLogin() {
        return fldLogin;
    }

    public void setFlgLogin(JTextField flgLogin) {
        this.fldLogin = flgLogin;
    }
    private JFileChooser chooser;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox ComboBoxDBMS;
    private javax.swing.JButton btnApp;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnChange;
    private javax.swing.JButton btnConfig;
    private javax.swing.JButton btnDb;
    private javax.swing.JButton btnDbSource;
    private javax.swing.JButton btnFile;
    private javax.swing.JButton btnIntBrowser;
    private javax.swing.JButton btnPathOO;
    private javax.swing.JButton btnPict;
    private javax.swing.JButton btnWorkDir;
    private javax.swing.JTextField fldApp;
    private javax.swing.JTextField fldConfig;
    private javax.swing.JTextField fldDb;
    private javax.swing.JTextField fldDbSource;
    private javax.swing.JTextField fldFile;
    private javax.swing.JTextField fldIntBrowser;
    private javax.swing.JTextField fldLogin;
    private javax.swing.JTextField fldNameSerber;
    private javax.swing.JPasswordField fldPass;
    private javax.swing.JTextField fldPathOO;
    private javax.swing.JTextField fldPict;
    private javax.swing.JTextField fldWorkDir;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblApp;
    private javax.swing.JLabel lblConfig;
    private javax.swing.JLabel lblDBMS;
    private javax.swing.JLabel lblData;
    private javax.swing.JLabel lblDbSource;
    private javax.swing.JLabel lblFile;
    private javax.swing.JLabel lblNameSerber;
    // End of variables declaration//GEN-END:variables
}
